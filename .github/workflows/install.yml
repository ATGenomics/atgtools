name: Installation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python:
          - { version: '3.9', toxenv: 'py39' }
          - { version: '3.10', toxenv: 'py310' }
          - { version: '3.11', toxenv: 'py311' }
          - { version: '3.12', toxenv: 'py312' }
        poetry-version: ["1.6.1", "1.7.0", "1.8.3"]
        os: [ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - uses: actions/cache@v3
        name: Define a cache for the venv
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Poetry install
        run: poetry install

      - name: Run tests
        run: poetry run tox -e ${{ matrix.python.toxenv }}

      - name: Upload Results to CodeCov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          env_vars: PYTHON_VERSION
          fail_ci_if_error: false
          files: ./tests/reports/coverage-html/index.html,./tests/reports/coverage.xml
          flags: unittests
          name: "${{ matrix.os }} - Python ${{ matrix.python-version }}"
          token: ${{ secrets.CODECOV_TOKEN }}
